# Custom Apache configuration

ServerName ${HOST}
ServerTokens Prod
DocumentRoot /app/www
TraceEnable off
FileETag None
ServerSignature off
DirectoryIndex index.html
Options -Indexes -ExecCGI -Includes -FollowSymLinks -MultiViews
AcceptPathInfo off
DirectorySlash off

# Logging
LogLevel error
ErrorLog /log/error/generic.log
CustomLog /log/access/generic.log combined
# ForensicLog /log/forensic/generic.log

# Remove html response for redirects
# Ideally it would be completely empty, but single char response is the best we can do for now
ErrorDocument 301 "301"
ErrorDocument 302 "302"
ErrorDocument 303 "303"
ErrorDocument 307 "307"
ErrorDocument 308 "308"

# Common TLS Settings
SSLProtocol -all -SSLv3 -TLSv1 -TLSv1.1 -TLSv1.2 +TLSv1.3
# SSLCipherSuite RC4-SHA:AES128-SHA:HIGH:!aNULL:!MD5
SSLCompression off
SSLOptions +StrictRequire
SSLSessionTickets off
# SSLUseStapling on
# SSLStaplingCache "shmcb:logs/ssl_stapling(32768)"

SSLProxyEngine on
# SSLProxyCheckPeerName off
# SSLProxyCheckPeerCN off
SetEnv proxy-sendcl 1
SetEnv proxy-sendchunked 0
ProxyStatus on
ProxyRequests off
ProxyPreserveHost on
ProxyErrorOverride off

<Directory "/app/www">
    Options -Indexes -ExecCGI -Includes -FollowSymLinks -MultiViews +SymLinksIfOwnerMatch
    # AllowOverride None
    AllowOverride All
    Require all granted
</Directory>

<Macro CommonVirtualHostSettings>
    ServerAlias *
</Macro>

<Macro CommonStatusSettings>
    Order allow,deny
    Satisfy all

    # 172. is for docker compose IPs for individual services
    # 192.168.65.1 is docker IP when accessing container from host in Docker Desktop
    Allow from 10.0.3.0/24 172.16.0.0/12 127.0.0.0/8 192.168.65.1

    # Setup Basic Authentication
    AuthType Basic
    AuthName "Restricted server status"
    AuthBasicProvider file
    AuthUserFile /app/misc/status.htpasswd
    Require valid-user
</Macro>

<VirtualHost *:80>
    Use CommonVirtualHostSettings

    ErrorLog /log/error/http.log
    CustomLog /log/access/http.log combined
    # ForensicLog /log/forensic/http.log

    # Handle status requests
    <Location "/.proxy/server-status">
        # Note: Status is not actually handled, but basic-auth is enforced anyway
        Use CommonStatusSettings
    </Location>
</VirtualHost>

<VirtualHost *:443>
    Use CommonVirtualHostSettings

    ErrorLog /log/error/https.log
    CustomLog /log/access/https.log combined
    # ForensicLog /log/forensic/https.log

    # TLS settings
    SSLEngine on
    SSLCertificateFile /certs/server.crt
    SSLCertificateKeyFile /certs/server.key

    # Enable HTTP/2, if available
    Protocols h2 http/1.1

    # Proxy settings
    # ProxyWebsocketFallbackToProxyHttp Off
    ProxyPassMatch ^((/?)|(/\.proxy(/.*)?))$ !
    ProxyPass "/" "${UPSTREAM_URL}/"
    ProxyPassReverse "/" "${UPSTREAM_URL}/"
    Header unset Server

    # Handle status requests
    <Location "/.proxy/server-status">
        SetHandler server-status
        Use CommonStatusSettings
    </Location>
</VirtualHost>
