services:
  app:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: app
    build:
      dockerfile: ./external/pihole/Dockerfile
    hostname: pihole-placeholder # This fixes random container hostname in dashboard header
    env_file:
      - ./app-secrets/app.env
    volumes:
      - ./app-data/pihole:/etc/pihole:rw
    cap_add:
      - SYS_NICE
    # Hard-coded DNS is necessary because of bootstrapping problem
    # Basically PiHole needs functional DNS in order to start (eg. to update adlists before start - which it can't do until it itself started, when it's the only DNS server on network)
    dns:
      - 1.1.1.1
      - 8.8.8.8
      - 9.9.9.9
    networks:
      internal-network: {}
      external-network: {}
    stop_grace_period: 30s
    tmpfs:
      - /run:rw,exec,nodev,noatime,nodiratime,uid=${DOCKER_COMPOSE_UID},gid=${DOCKER_COMPOSE_GID}
      - /var/log/pihole:rw,noexec,nodev,noatime,nodiratime,uid=${DOCKER_COMPOSE_UID},gid=${DOCKER_COMPOSE_GID}
      - /var/spool:rw,noexec,nodev,noatime,nodiratime,uid=${DOCKER_COMPOSE_UID},gid=${DOCKER_COMPOSE_GID}

  app-setup:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: docker-app-setup

  app-prometheus-exporter:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: template
    container_name: ${DOCKER_COMPOSE_APP_NAME}-app-prometheus-exporter
    build:
      dockerfile: ./external/pihole-prometheus-exporter/Dockerfile
    environment:
      PIHOLE_HOSTNAME: app
      PIHOLE_PORT: 80
    env_file:
      - ./app-secrets/app-prometheus-exporter.env

  socket-proxy:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: socket-proxy
    environment:
      CONTAINERS: 1
      EXEC: 1
      PING: 1
      POST: 1

  certificator:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: certificator

  apache:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: apache
    volumes:
      - ./app-secrets/prometheus.htpasswd:/homelab/users/prometheus.htpasswd:ro

  apache-prometheus-exporter:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: apache-prometheus-exporter

  favicons:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: favicons

networks:
  default:
    driver: none
  internal-network:
    name: ${DOCKER_COMPOSE_APP_NAME}-internal-network
    driver: bridge
    internal: true
  external-network:
    name: ${DOCKER_COMPOSE_APP_NAME}-external-network
    driver: bridge
    internal: false
