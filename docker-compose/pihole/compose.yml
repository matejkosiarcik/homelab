services:
  app:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: app
    build:
      dockerfile: ./external/pihole/Dockerfile
    hostname: pihole-placeholder # This fixes random container hostname in dashboard header
    env_file:
      - ./app-secrets/app.env
    volumes:
      - ./app-data/pihole/data:/etc/pihole:rw
    # Hard-coded DNS is necessary because of bootstrapping problem
    # Basically PiHole needs functional DNS in order to start (eg. to update adlists before start - which it can't do until it itself started, when it's the only DNS server on network)
    dns:
      - 8.8.8.8
      - 1.1.1.1
    networks:
      external-network: {} # TODO: Connect to external world via squid instead
    stop_grace_period: 30s

  app-setup:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: template
    container_name: ${DOCKER_COMPOSE_APP_NAME}-app-setup
    build:
      dockerfile: ./custom/docker-setup/Dockerfile
    environment:
      HOMELAB_SETUP_TARGET_CONTAINER: ${DOCKER_COMPOSE_APP_NAME}-app
      DOCKER_HOST: tcp://socket-proxy:2375

  app-prometheus-exporter:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: template
    container_name: ${DOCKER_COMPOSE_APP_NAME}-app-prometheus-exporter
    build:
      dockerfile: ./external/pihole-prometheus-exporter/Dockerfile
    environment:
      PIHOLE_HOSTNAME: app
      PIHOLE_PORT: 80
    env_file:
      - ./app-secrets/app-prometheus-exporter.env

  socket-proxy:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: template
    container_name: ${DOCKER_COMPOSE_APP_NAME}-socket-proxy
    build:
      dockerfile: ./external/socket-proxy/Dockerfile
    read_only: true
    environment:
      EXEC: 1
      CONTAINERS: 1
      PING: 1
      POST: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    tmpfs:
      - /run

  certificator:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: certificator

  apache:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: apache
    volumes:
      - ./app-secrets/prometheus.htpasswd:/homelab/prometheus.htpasswd:ro

  apache-prometheus-exporter:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: apache-prometheus-exporter

networks:
  default:
    internal: true
  external-network:
    name: ${DOCKER_COMPOSE_APP_NAME}-external-network
    driver: bridge
    internal: false
