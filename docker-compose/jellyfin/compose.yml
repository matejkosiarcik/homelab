services:
  app:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: app
    build:
      dockerfile: ./external/jellyfin/Dockerfile
    init: false
    hostname: ${DOCKER_COMPOSE_APP_NAME} # This fixes random container hostname in settings and server picker (everything after dot is ignored, so it cannot be full domain)
    volumes:
      - ./app-data/jellyfin-data:/config:rw
    networks:
      external-network: {} # TODO: Connect to external world via squid instead

  app-setup:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: template
    build:
      dockerfile: ./custom/script-setup/Dockerfile
      args:
        SETUP_FILE: ./external/jellyfin/setup.sh
    volumes:
      - ./app-data/jellyfin-data:/homelab/data:rw

  certificator:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: certificator

  apache:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: apache
    volumes:
      - ./app-secrets/prometheus.htpasswd:/homelab/prometheus.htpasswd:ro

  apache-prometheus-exporter:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: apache-prometheus-exporter

networks:
  default:
    internal: true
  external-network:
    name: ${DOCKER_COMPOSE_APP_NAME}-external-network
    driver: bridge
    internal: false
