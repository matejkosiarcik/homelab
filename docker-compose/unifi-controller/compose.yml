services:
  app:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: app
    build:
      dockerfile: ./external/unifi-network-application/Dockerfile
      args:
        HOMELAB_BUILD_ENV: N/A
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      MONGO_HOST: mongodb
    volumes:
      - ./app-data/unifi-network-application:/config:rw
      - ./app-secrets/mongodb-password.txt:/homelab/mongodb-password.txt:ro
    networks:
      external-network: {} # TODO: Connect to external world via squid instead
    stop_grace_period: 30s

  mongodb:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: app
    container_name: ${DOCKER_COMPOSE_APP_NAME}-mongodb
    build:
      dockerfile: ./external/mongodb/Dockerfile
    command: --auth --quiet --logpath /dev/null
    environment:
      HOMELAB_CONTAINER_NAME: mongodb
      HOMELAB_CONTAINER_VARIANT: default
      MONGO_DBNAME: unifi
      MONGO_USER: unifi
      PORT: 27017
      TZ: Europe/Bratislava
    env_file:
      - ./app-secrets/mongodb.env
    volumes:
      - ./app-data/mongodb:/data/db:rw
      - ../../../../docker-images/external/unifi-network-application/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    healthcheck:
      interval: 5s
      start_period: 60s
      timeout: 2s
      retries: 1
      test: sh '/homelab/healthcheck.sh'

  certificator:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: certificator

  apache:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: apache

  apache-prometheus-exporter:
    extends:
      file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
      service: apache-prometheus-exporter

  # web-backup:
  #   extends:
  #     file: ${DOCKER_COMPOSE_REPOROOT_PATH}/docker-compose/.shared/compose.yml
  #     service: template
  #   container_name: ${DOCKER_COMPOSE_APP_NAME}-web-backup
  #   build:
  #     dockerfile: ./custom/web-automation/Dockerfile
  #   depends_on:
  #     app:
  #       condition: service_healthy
  #   env_file:
  #     - ./app-secrets/web-backup.env
  #   environment:
  #     HOMELAB_CONTAINER_VARIANT: backup
  #   volumes:
  #     - ./app-data/web-backup:/homelab/backup:rw
  #     - ./app-logs/web-backup-errors:/homelab/errors:rw
  #     - ./app-logs/web-backup:/homelab/logs:rw

networks:
  default:
    internal: true
  external-network:
    name: ${DOCKER_COMPOSE_APP_NAME}-external-network
    driver: bridge
    internal: false
