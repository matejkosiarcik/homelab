name: Docker build

permissions: read-all

on:
  pull_request:

jobs:
  paths-filter:
    name: Filter changed components
    runs-on: ubuntu-latest
    outputs:
      components: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Filter paths
        uses: dorny/paths-filter@v3.0.2
        id: filter
        with:
          filters: |
            actualbudget:
              - '**/actualbudget*/**'
              - '**/actual-budget*/**'
            changedetection:
              - '**/changedetection*/**'
            docker-proxy:
              - '**/docker-cache*/**'
              - '**/docker-mirror*/**'
              - '**/docker-proxy*/**'
              - '**/docker-registry*/**'
              - '**/dockerhub-*/**'
            dozzle-agent:
              - '**/dozzle-agent*/**'
              - '**/dozzle*/**'
            dozzle-server:
              - '**/dozzle-server*/**'
              - '**/dozzle*/**'
            gatus:
              - '**/gatus*/**'
            healthchecks:
              - '**/healthchecks*/**'
            homeassistant:
              - '**/homeassistant*/**'
              - '**/home-assistant*/**'
            homepage:
              - '**/homepage*/**'
            jellyfin:
              - '**/jellyfin*/**'
            minio:
              - '**/minio*/**'
            ntfy:
              - '**/ntfy*/**'
            omada-controller:
              - '**/omada-controller*/**'
            openspeedtest:
              - '**/openspeedtest*/**'
            pihole:
              - '**/pihole*/**'
            smb:
              - '**/samba*/**'
              - '**/smb*/**'
            smtp4dev:
              - '**/smtp4dev*/**'
            speedtest-tracker:
              - '**/speedtest-tracker*/**'
            tvheadend:
              - '**/tvheadend*/**'
            unifi-controller:
              - '**/unifi-controller*/**'
              - '**/unifi-network-application*/**'
            unbound:
              - '**/unbound*/**'

  build:
    name: Build - ${{ matrix.component }}
    runs-on: ubuntu-latest
    needs: paths-filter
    strategy:
      fail-fast: false
      matrix:
        component: ${{ fromJSON(needs.paths-filter.outputs.components) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3.2.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Example build
        run: |
          {
            printf '%s ' '{'
            printf '%s ' '"actualbudget": ["/servers/odroid-h3/docker-apps/actualbudget"],'
            printf '%s ' '"changedetection": ["/servers/odroid-h3/docker-apps/changedetection"],'
            printf '%s ' '"docker-proxy": ["/servers/odroid-h3/docker-apps/dockerhub-proxy"],'
            printf '%s ' '"dozzle-agent": ["/servers/odroid-h3/docker-apps/dozzle-agent", "/servers/raspberry-pi-3b/docker-apps/dozzle-agent", "/servers/raspberry-pi-4b-2g/docker-apps/dozzle-agent", "/servers/raspberry-pi-4b-4g/docker-apps/dozzle-agent"],'
            printf '%s ' '"dozzle-server": ["/servers/odroid-h3/docker-apps/dozzle-server"],'
            printf '%s ' '"gatus": ["/servers/odroid-h3/docker-apps/gatus", "/servers/raspberry-pi-4b-4g/docker-apps/gatus-2"],'
            printf '%s ' '"healthchecks": ["/servers/odroid-h3/docker-apps/healthchecks"],'
            printf '%s ' '"homeassistant": ["/servers/odroid-h3/docker-apps/homeassistant"],'
            printf '%s ' '"homepage": ["/servers/odroid-h3/docker-apps/homepage"],'
            printf '%s ' '"jellyfin": ["/servers/odroid-h3/docker-apps/jellyfin"],'
            printf '%s ' '"minio": ["/servers/odroid-h3/docker-apps/minio"],'
            printf '%s ' '"ntfy": ["/servers/odroid-h3/docker-apps/ntfy"],'
            printf '%s ' '"omada-controller": ["/servers/odroid-h3/docker-apps/omada-controller"],'
            printf '%s ' '"openspeedtest": ["/servers/odroid-h3/docker-apps/openspeedtest"],'
            printf '%s ' '"pihole": ["/servers/odroid-h3/docker-apps/pihole", "/servers/odroid-h3/docker-apps/pihole-backup", "/servers/raspberry-pi-4b-4g/docker-apps/pihole-2"],'
            printf '%s ' '"smb": [],'
            printf '%s ' '"smtp4dev": ["/servers/odroid-h3/docker-apps/smtp4dev"],'
            printf '%s ' '"speedtest-tracker": ["/servers/odroid-h3/docker-apps/speedtest-tracker"],'
            printf '%s ' '"tvheadend": ["/servers/raspberry-pi-3b/docker-apps/tvheadend"],'
            printf '%s ' '"unifi-controller": ["/servers/raspberry-pi-4b-4g/docker-apps/unifi-controller"],'
            printf '%s ' '"unbound": ["/servers/odroid-h3/docker-apps/unbound", "/servers/raspberry-pi-4b-4g/docker-apps/unbound-2"]'
            printf '%s ' '}'
          } | jq ".${{ matrix.component }}" | sponge 'components.txt'
          cat 'components.txt'

          # export DOCKER_COMPOSE_APP_NAME=placeholder
          # cd docker-images
          # docker build . \
          #   --file ./external/${{ matrix.component }}/Dockerfile \
          #   --tag 'homelab/${{ matrix.component }}:dev'
