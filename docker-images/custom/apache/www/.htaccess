# Protect .htaccess and .htpasswd
<FilesMatch "^(?:^.*/)?\.[Hh][Tt]">
    Order allow,deny
    Deny from all
</FilesMatch>

# Turn on redirection
RewriteEngine On
RewriteBase /

# Remove port from _HOST if applicable
RewriteRule ^ - [E=_HOST:%{HTTP_HOST},NE]
RewriteCond %{ENV:_HOST} ^(.*):.*$ [NC]
RewriteRule ^ - [E=_HOST:%1,NE]

# Set _ALLOW_HTTPS depending on current path
RewriteRule ^ - [E=_ALLOW_HTTPS:true,NE]
RewriteCond %{REQUEST_URI} ^/.well-known/acme-challenge/ [NC]
RewriteRule ^ - [E=_ALLOW_HTTPS:false,NE]

# Set _FORCE_HTTPS depending on current path
RewriteRule ^ - [E=_FORCE_HTTPS:false,NE]
RewriteCond %{REQUEST_URI} ^/.proxy$ [NC]
RewriteRule ^ - [E=_FORCE_HTTPS:true,NE]
RewriteCond %{REQUEST_URI} ^/.proxy/+ [NC]
RewriteRule ^ - [E=_FORCE_HTTPS:true,NE]

# Set target protocol
RewriteRule ^ - [E=_PROTOCOL:,NE]
RewriteCond %{ENV:PROXY_REDIRECT_TO_HTTP_OR_HTTPS} ^HTTP$ [NC]
RewriteRule ^ - [E=_PROTOCOL:http,NE]
RewriteCond %{ENV:_FORCE_HTTPS} true [NC]
RewriteRule ^ - [E=_PROTOCOL:https,NE]
RewriteCond %{ENV:PROXY_REDIRECT_TO_HTTP_OR_HTTPS} ^HTTPS$ [NC]
RewriteCond %{ENV:_ALLOW_HTTPS} true [NC]
RewriteRule ^ - [E=_PROTOCOL:https,NE]
RewriteCond %{ENV:_PROTOCOL} ^$ [NC]
RewriteCond %{HTTPS} off [NC]
RewriteRule ^ - [E=_PROTOCOL:http,NE]
RewriteCond %{ENV:_PROTOCOL} ^$ [NC]
RewriteCond %{HTTPS} on [NC]
RewriteRule ^ - [E=_PROTOCOL:https,NE]

# Set target port
RewriteRule ^ - [E=_PORT:,NE]
RewriteCond %{ENV:_PROTOCOL} ^http$ [NC]
RewriteRule ^ - [E=_PORT::%{ENV:PROXY_HTTP_PORT},NE]
RewriteCond %{ENV:_PROTOCOL} ^https$ [NC]
RewriteRule ^ - [E=_PORT::%{ENV:PROXY_HTTPS_PORT},NE]

# Hide default ports
RewriteCond %{ENV:_PROTOCOL} ^http$ [NC]
RewriteCond %{ENV:_PORT} ^:80$ [NC]
RewriteRule ^ - [E=_PORT:,NE]
RewriteCond %{ENV:_PROTOCOL} ^https$ [NC]
RewriteCond %{ENV:_PORT} ^:443$ [NC]
RewriteRule ^ - [E=_PORT:,NE]

# Redirect [internally] all directories without trailing slash
RewriteCond %{REQUEST_URI} ^/.proxy(/.*)?$ [NC]
RewriteCond %{HTTPS} on [NC]
RewriteCond %{REQUEST_FILENAME} -d
RewriteCond %{REQUEST_URI} !/$
RewriteRule ^ "%{REQUEST_URI}/" [L]

# Decide if we should apply redirect
RewriteRule ^ - [E=_REDIRECT:false,NE]
RewriteCond %{HTTPS} off [NC]
RewriteCond %{ENV:_PROTOCOL} ^https$ [NC]
RewriteRule ^ - [E=_REDIRECT:true,NE]
RewriteCond %{HTTPS} on [NC]
RewriteCond %{ENV:_PROTOCOL} ^http$ [NC]
RewriteRule ^ - [E=_REDIRECT:true,NE]

# Use 301/302 for GET & HEAD requests and 308/307 for all others (POST, PUT, ...)
# Because 301 and 302 are not guaranteed to keep the original request method when client receives it (so it changes eg. from POST to GET)
# See more info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/301 or https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/302
RewriteRule ^ - [E=_REDIRECT_STATUS_SAFE_GET:false,NE]
RewriteCond %{REQUEST_METHOD} ^(GET|HEAD)$ [NC]
RewriteRule ^ - [E=_REDIRECT_STATUS_SAFE_GET:true,NE]

# Perform redirects if applicable (empty path)
RewriteCond %{REQUEST_URI} ^$ [NC,OR]
RewriteCond %{REQUEST_URI} ^/$ [NC]
RewriteCond %{ENV:_REDIRECT} true [NC]
RewriteCond %{ENV:_REDIRECT_STATUS_SAFE_GET} true [NC]
RewriteRule ^ "%{ENV:_PROTOCOL}://%{ENV:_HOST}%{ENV:_PORT}" [L,R=302]
RewriteCond %{REQUEST_URI} ^$ [NC,OR]
RewriteCond %{REQUEST_URI} ^/$ [NC]
RewriteCond %{ENV:_REDIRECT} true [NC]
RewriteCond %{ENV:_REDIRECT_STATUS_SAFE_GET} !true [NC]
RewriteRule ^ "%{ENV:_PROTOCOL}://%{ENV:_HOST}%{ENV:_PORT}" [L,R=307]

# Perform redirects if applicable (not empty path)
RewriteCond %{REQUEST_URI} !^$ [NC]
RewriteCond %{ENV:_REDIRECT} true [NC]
RewriteCond %{ENV:_REDIRECT_STATUS_SAFE_GET} true [NC]
RewriteRule ^ "%{ENV:_PROTOCOL}://%{ENV:_HOST}%{ENV:_PORT}%{REQUEST_URI}" [L,R=302]
RewriteCond %{REQUEST_URI} !^$ [NC]
RewriteCond %{ENV:_REDIRECT} true [NC]
RewriteCond %{ENV:_REDIRECT_STATUS_SAFE_GET} !true [NC]
RewriteRule ^ "%{ENV:_PROTOCOL}://%{ENV:_HOST}%{ENV:_PORT}%{REQUEST_URI}" [L,R=307]

# Remove "Content-Type" header when redirecting from HTTP to HTTPS
# More info: https://github.com/whatwg/fetch/issues/609
# Header always set Content-Type "" "expr=%{HTTPS} =~ m#^off$#"
# Header always unset Content-Type "expr=%{HTTPS} =~ m#^off$#"

# Return index.html for directories
RewriteCond %{ENV:_REDIRECT} false [NC]
RewriteCond %{ENV:PROXY_UPSTREAM_URL} ^$ [NC,OR]
RewriteCond %{REQUEST_URI} ^/.proxy(/*.*)?$ [NC]
RewriteCond %{REQUEST_FILENAME} -d
RewriteCond %{REQUEST_FILENAME}/index.html -f
RewriteRule ^ "%{REQUEST_URI}/index.html" [L]

# Specific redirect for PiHole: "/" -> "/admin"
RewriteCond %{ENV:HOMELAB_APP_TYPE} pihole [NC]
RewriteCond %{ENV:_REDIRECT_STATUS_SAFE_GET} true [NC]
RewriteCond %{REQUEST_URI} ^/?$
RewriteRule ^ /admin [L,R=302]
RewriteCond %{ENV:HOMELAB_APP_TYPE} pihole [NC]
RewriteCond %{ENV:_REDIRECT_STATUS_SAFE_GET} !true [NC]
RewriteCond %{REQUEST_URI} ^/?$
RewriteRule ^ /admin [L,R=307]

# # ActualBudget favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} actualbudget [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /favicon-32x32.png [L,R=302]

# # Certbot favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} certbot [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /.proxy/icons/certbot/favicon.png [L]
# RewriteCond %{ENV:HOMELAB_APP_TYPE} certbot [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.ico$
# RewriteRule ^ /.proxy/icons/certbot/favicon.ico [L]

# # Changedetection favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} changedetection [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /static/favicons/favicon-32x32.png [L,R=302]

# # Docker Cache Proxy favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} docker-cache-proxy [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /.proxy/icons/docker-cache-proxy/favicon.png [L]
# RewriteCond %{ENV:HOMELAB_APP_TYPE} docker-cache-proxy [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.ico$
# RewriteRule ^ /.proxy/icons/docker-cache-proxy/favicon.ico [L]

# # Gatus favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} gatus [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /favicon-32x32.png [L,R=302]

# # Glances favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} glances [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.ico$
# RewriteRule ^ /static/favicon.ico [L,R=302]

# # Homepage favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} homepage [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /favicon-32x32.png [L,R=302]

# # Gotify favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} gotify [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /static/favicon-32x32.png [L,R=302]
# RewriteCond %{ENV:HOMELAB_APP_TYPE} gotify [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.ico$
# RewriteRule ^ /.proxy/icons/gotify/favicon.ico [L]

# # Jellyfin favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} jellyfin [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.ico$
# RewriteRule ^ /web/favicon.ico [L,R=302]
# RewriteCond %{ENV:HOMELAB_APP_TYPE} jellyfin [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /web/favicon.png [L,R=302]

# # Minio favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} minio [NC]
# RewriteCond %{ENV:HOMELAB_APP_VARIANT} console [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /favicon-32x32.png [L,R=302]

# # MotionEye favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} motioneye [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /.proxy/icons/motioneye/favicon.png [L]
# RewriteCond %{ENV:HOMELAB_APP_TYPE} motioneye [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.ico$
# RewriteRule ^ /.proxy/icons/motioneye/favicon.ico [L]

# # Ntfy favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} ntfy [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /static/images/apple-touch-icon.png [L,R=302]

# # OpenSpeedtest favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} openspeedtest [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /assets/images/icons/favicon-32x32.png [L,R=302]

# # PiHole favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} pihole [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /admin/img/favicons/favicon-32x32.png [L,R=302]

# # Prometheus favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} prometheus [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.ico$
# RewriteRule ^ /.proxy/icons/prometheus/favicon.ico [L]
# RewriteCond %{ENV:HOMELAB_APP_TYPE} prometheus [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /.proxy/icons/prometheus/favicon.png [L]

# # Smtp4Dev favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} smtp4dev [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /logo.png [L,R=302]

# # TVHeadend favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} tvheadend [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /static/img/logo.png [L,R=302]

# # Unbound favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} unbound [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.ico$
# RewriteRule ^ /.proxy/icons/unbound/favicon.ico [L]
# RewriteCond %{ENV:HOMELAB_APP_TYPE} unbound [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /.proxy/icons/unbound/favicon.png [L]

# # Unifi Controller favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} unifi-controller [NC]
# RewriteCond %{REQUEST_URI} ^/setup/favicon.png$
# RewriteRule ^ /.proxy/icons/unifi-controller/favicon.png [L]

# # Vaultwarden favicon
# RewriteCond %{ENV:HOMELAB_APP_TYPE} vaultwarden [NC]
# RewriteCond %{REQUEST_URI} ^/favicon.png$
# RewriteRule ^ /images/favicon-32x32.png [L,R=302]

# Route all invalid unbound requests to 404
RewriteCond %{ENV:HOMELAB_APP_TYPE} unbound [NC]
RewriteCond %{REQUEST_URI} !^/favicon\.(?:ico|png)$ [NC]
RewriteCond %{REQUEST_URI} !^/metrics$ [NC]
RewriteCond %{REQUEST_URI} !^/.proxy(/*.*)?$ [NC]
RewriteRule ^ /.proxy/not-found [L]

# Protect Apache proxy prometheus endpoint
<If "%{HTTPS} == 'on' && %{REQUEST_URI} =~ m#^/.proxy/metrics/*$#">
    AuthType Basic
    AuthName Protected
    AuthBasicProvider file
    AuthUserFile /homelab/proxy-prometheus.htpasswd
    Require valid-user
</If>

# Protect Certbot endpoints
<If "%{HTTPS} == 'on' && %{ENV:HOMELAB_APP_TYPE} == 'certbot' && %{REQUEST_URI} =~ m#^/download(/.*)?$#">
    AuthType Basic
    AuthName Protected
    AuthBasicProvider file
    AuthUserFile /homelab/users.htpasswd
    Require valid-user
</If>

# Protect entire Homepage
<If "%{HTTPS} == 'on' && %{ENV:HOMELAB_APP_TYPE} == 'homepage' && %{REQUEST_URI} !~ m#^/\.proxy(?:/.*)?$# && %{REQUEST_URI} !~ m#^/favicon.ico$# && %{REQUEST_URI} !~ m#^/favicon.png$#">
    AuthType Basic
    AuthName Protected
    AuthBasicProvider file
    AuthUserFile /homelab/users.htpasswd
    Require valid-user
</If>

# Protect Glances prometheus endpoint
<If "%{HTTPS} == 'on' && %{ENV:HOMELAB_APP_TYPE} == 'glances' && %{REQUEST_URI} =~ m#^/metrics/*$#">
    AuthType Basic
    AuthName Protected
    AuthBasicProvider file
    AuthUserFile /homelab/prometheus.htpasswd
    Require valid-user
</If>

# Protect Gatus prometheus endpoint
<If "%{HTTPS} == 'on' && %{ENV:HOMELAB_APP_TYPE} == 'gatus' && %{REQUEST_URI} =~ m#^/metrics/*$#">
    AuthType Basic
    AuthName Protected
    AuthBasicProvider file
    AuthUserFile /homelab/prometheus.htpasswd
    Require valid-user
</If>

# Protect Jellyfin prometheus endpoint
<If "%{HTTPS} == 'on' && %{ENV:HOMELAB_APP_TYPE} == 'jellyfin' && %{REQUEST_URI} =~ m#^/metrics/*$#">
    AuthType Basic
    AuthName Protected
    AuthBasicProvider file
    AuthUserFile /homelab/prometheus.htpasswd
    Require valid-user
</If>

# Protect Node Exporter prometheus endpoint
<If "%{HTTPS} == 'on' && %{ENV:HOMELAB_APP_TYPE} == 'node-exporter' && %{REQUEST_URI} =~ m#^/metrics/*$#">
    AuthType Basic
    AuthName Protected
    AuthBasicProvider file
    AuthUserFile /homelab/prometheus.htpasswd
    Require valid-user
</If>

# Protect Node Exporter debug endpoints
<If "%{HTTPS} == 'on' && %{ENV:HOMELAB_APP_TYPE} == 'node-exporter' && %{REQUEST_URI} =~ m#^/debug(/.+)?$#">
    AuthType Basic
    AuthName Protected
    AuthBasicProvider file
    AuthUserFile /homelab/debug.htpasswd
    Require valid-user
</If>

# Protect entire Ollama
<If "%{HTTPS} == 'on' && %{ENV:HOMELAB_APP_TYPE} == 'ollama' && %{REQUEST_URI} !~ m#^/\.proxy(?:/.*)?$# && %{REQUEST_URI} !~ m#^/favicon.ico$# && %{REQUEST_URI} !~ m#^/favicon.png$#">
    AuthType Basic
    AuthName Protected
    AuthBasicProvider file
    AuthUserFile /homelab/users.htpasswd
    Require valid-user
</If>

# Protect entire Owntracks
<If "%{HTTPS} == 'on' && %{ENV:HOMELAB_APP_TYPE} == 'owntracks' && %{REQUEST_URI} !~ m#^/\.proxy(?:/.*)?$# && %{REQUEST_URI} !~ m#^/favicon.ico$# && %{REQUEST_URI} !~ m#^/favicon.png$#">
    AuthType Basic
    AuthName Protected
    AuthBasicProvider file
    AuthUserFile /homelab/users.htpasswd
    Require valid-user
</If>

# Protect PiHole prometheus endpoint
<If "%{HTTPS} == 'on' && %{ENV:HOMELAB_APP_TYPE} == 'pihole' && %{REQUEST_URI} =~ m#^/metrics/*$#">
    AuthType Basic
    AuthName Protected
    AuthBasicProvider file
    AuthUserFile /homelab/prometheus.htpasswd
    Require valid-user
</If>

# Protect Unbound prometheus endpoint
<If "%{HTTPS} == 'on' && %{ENV:HOMELAB_APP_TYPE} == 'unbound' && %{REQUEST_URI} =~ m#^/metrics/*$#">
    AuthType Basic
    AuthName Protected
    AuthBasicProvider file
    AuthUserFile /homelab/prometheus.htpasswd
    Require valid-user
</If>

# Protect entire Wikipedia
<If "%{HTTPS} == 'on' && %{ENV:HOMELAB_APP_TYPE} == 'wikipedia' && %{REQUEST_URI} !~ m#^/\.proxy(?:/.*)?$# && %{REQUEST_URI} !~ m#^/favicon.ico$# && %{REQUEST_URI} !~ m#^/favicon.png$#">
    AuthType Basic
    AuthName Protected
    AuthBasicProvider file
    AuthUserFile /homelab/users.htpasswd
    Require valid-user
</If>

# Redirect certbot download index.html
RewriteCond %{ENV:HOMELAB_APP_TYPE} certbot [NC]
RewriteCond %{REQUEST_URI} ^/download/*$ [NC]
RewriteRule ^ /index.html [L]

# Custom prometheus metrics for apache itself
RewriteCond %{REQUEST_URI} ^/.proxy/metrics/*$ [NC]
RewriteCond %{HTTP:Upgrade} !websocket [NC]
RewriteCond %{HTTP:Connection} !upgrade [NC]
RewriteRule ^ "%{ENV:PROXY_PROMETHEUS_EXPORTER_URL}/metrics" [P,L]

# Custom prometheus metrics
RewriteCond %{ENV:HOMELAB_APP_TYPE} ^(?:glances|pihole|unbound)$ [NC]
RewriteCond %{REQUEST_URI} ^/metrics/*$ [NC]
RewriteCond %{HTTP:Upgrade} !websocket [NC]
RewriteCond %{HTTP:Connection} !upgrade [NC]
RewriteRule ^ "%{ENV:PROXY_UPSTREAM_URL_PROMETHEUS}%{REQUEST_URI}" [P,L]

# Custom owntracks decryptor
RewriteCond %{ENV:HOMELAB_APP_TYPE} ^owntracks$ [NC]
RewriteCond %{REQUEST_URI} ^/pub [NC]
RewriteCond %{HTTP:Upgrade} !websocket [NC]
RewriteCond %{HTTP:Connection} !upgrade [NC]
RewriteRule ^ "http://decryptor:8080%{REQUEST_URI}" [P,L]

# Custom favicons
RewriteCond %{REQUEST_URI} ^/favicon\.(?:ico|png)$ [NC]
RewriteCond %{HTTP:Upgrade} !websocket [NC]
RewriteCond %{HTTP:Connection} !upgrade [NC]
RewriteRule ^ "http://favicons:8080%{REQUEST_URI}" [P,L]

# Proxy websockets upstream
RewriteCond %{REQUEST_URI} !^/.proxy(/*.*)?$ [NC]
RewriteCond %{HTTP:Upgrade} websocket [NC]
RewriteCond %{HTTP:Connection} upgrade [NC]
RewriteCond %{ENV:PROXY_UPSTREAM_URL_WS} !^$ [NC]
RewriteRule ^ "%{ENV:PROXY_UPSTREAM_URL_WS}%{REQUEST_URI}" [P,L]

# Proxy motioneye stream requests upstream
RewriteCond %{ENV:HOMELAB_APP_TYPE} motioneye [NC]
RewriteCond %{REQUEST_URI} ^/stream$ [NC]
RewriteCond %{HTTP:Upgrade} !websocket [NC]
RewriteCond %{HTTP:Connection} !upgrade [NC]
RewriteCond %{ENV:PROXY_UPSTREAM_URL_STREAM} !^$ [NC]
RewriteRule ^ "%{ENV:PROXY_UPSTREAM_URL_STREAM}/" [P,L]

# Proxy regular requests upstream
RewriteCond %{REQUEST_URI} !^/.proxy(/*.*)?$ [NC]
RewriteCond %{HTTP:Upgrade} !websocket [NC]
RewriteCond %{HTTP:Connection} !upgrade [NC]
RewriteCond %{ENV:PROXY_UPSTREAM_URL} !^$ [NC]
RewriteRule ^ "%{ENV:PROXY_UPSTREAM_URL}%{REQUEST_URI}" [P,L]

# Return 404 instead of 403 for not found directory-index
RewriteCond %{REQUEST_URI} !^/.proxy/status$ [NC]
RewriteCond %{REQUEST_URI} !^/.proxy/metrics$ [NC]
RewriteCond %{ENV:_REDIRECT} false [NC]
RewriteCond %{ENV:PROXY_UPSTREAM_URL} ^$ [NC]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^ - [L,R=404]
