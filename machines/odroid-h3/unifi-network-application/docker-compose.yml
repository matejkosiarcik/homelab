# version: "3.8"

services:
  app:
    image: linuxserver/unifi-network-application:8.1.113
    container_name: unifi-network-application
    hostname: unifi-network-application
    environment:
      - FILE__MONGO_PASS=/.homelab/database-password.txt
      - MONGO_DBNAME=unifi
      - MONGO_HOST=unifi-network-application-mongodb
      - MONGO_PORT=27017
      - MONGO_USER=unifi
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Bratislava
      # - MEM_LIMIT=1024 # optional
      # - MEM_STARTUP=1024 # optional
      # - MONGO_TLS= # optional
      # - MONGO_AUTHSOURCE= # optional
    volumes:
      - ./data/app:/config:rw
      - ./private/database-password.txt:/.homelab/database-password.txt:ro
    ports:
      - 3478:3478/udp
      - 8080:8080
      - 8443:8443
      - 10001:10001/udp
      # Optional below
      - 1900:1900/udp
      - 5514:5514/udp
      - 6789:6789
      - 8843:8843
      - 8880:8880
    healthcheck:
      test: if [ "$(curl --insecure https://localhost:8443/status | jq .meta.up)" = 'true' ]; then exit 0; else exit 1; fi
      start_period: 60s
      interval: 10s
      timeout: 2s
      retries: 1
    depends_on:
      database:
        condition: service_healthy
    stop_grace_period: 30s

  database:
    image: mongo:7.0.8
    container_name: unifi-network-application-mongodb
    hostname: unifi-network-application-mongodb
    command: --auth
    volumes:
      - ./data/mongodb:/data/db:rw
      - ./config/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./private/database-password.txt:/.homelab/database-password.txt:ro
    healthcheck:
      test: printf 'show databases\n' | mongosh localhost:27017/unifi --username unifi --password "$(cat /.homelab/database-password.txt)" --quiet || exit 1
      start_period: 20s
      interval: 10s
      timeout: 2s
      retries: 1
    stop_grace_period: 30s

  app-backup:
    image: unifi-network-application-backup:homelab
    build:
      context: backuper/
    container_name: unifi-network-application-backup
    hostname: unifi-network-application-backup
    depends_on:
      database:
        condition: service_healthy
      app:
        condition: service_healthy
    env_file:
      - ./private/app-backup.env
    environment:
      - URL=https://unifi-network-application:8443
    volumes:
      - ./data/app-backup:/backup:rw
      - ./log/app-backup:/log:rw
    healthcheck:
      test: '[ "$(cat /app/.internal/status 2>/dev/null)" = "1" ] || exit 1'
      start_period: 15s
      interval: 10s
      timeout: 1s
      retries: 0
    stop_grace_period: 5s

networks:
  unifi-network-application-network:
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: "10.1.0.0/19"
          ip_range: "10.1.11.0/24"
