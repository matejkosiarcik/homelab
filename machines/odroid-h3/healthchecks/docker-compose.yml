# version: "3.8"

services:
  app:
    image: healthchecks/healthchecks:v3.3
    container_name: healthchecks
    hostname: healthchecks
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - ./private/app.env
    environment:
      # General options
      - DEBUG=False
      - SITE_NAME=Healthchecks

      # General options
      - DB_HOST=database
      - DB_NAME=healthchecks
      - DB=postgres

      # Email options
      - EMAIL_HOST_PASSWORD= # TODO: Set ?
      - EMAIL_HOST_USER= # TODO: Set ?
      - EMAIL_PORT=8025 # TODO: Unset
      - EMAIL_USE_SSL=False # TODO: Remove
      - EMAIL_USE_TLS=False # TODO: Set True
      - EMAIL_USE_VERIFICATION=True

      - TZ=Europe/Bratislava # optional
    volumes:
      - ./config/app_healthcheck.py:/.homelab/healthcheck.py:ro
    healthcheck:
      test: python3 /.homelab/healthcheck.py || exit 1
      start_period: 25s
      interval: 10s
      timeout: 2s
      retries: 1
    stop_grace_period: 30s

  database:
    image: postgres:16.2
    container_name: healthchecks-postgres
    hostname: healthchecks-postgres
    environment:
      # Basic setup
      - PGDATA=/var/lib/postgresql/data/pgdata

      # Set main database connection values
      - POSTGRES_DB=healthchecks
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/.homelab/password.txt

      # Set same connection values for psql and pg_isready
      - PGUSER=postgres
      - PGDATABASE=healthchecks

      - TZ=Europe/Bratislava # optional
    healthcheck:
      test: pg_isready || exit 1
      start_period: 20s
      interval: 10s
      timeout: 2s
      retries: 1
    volumes:
      - ./data/database-data:/var/lib/postgresql/data:rw
      - ./private/database-password.txt:/.homelab/password.txt:ro
    stop_grace_period: 30s

  database-backup:
    image: healthchecks-postgres-backup:homelab
    build:
      context: backuper/
    container_name: healthchecks-postgres-backup
    hostname: healthchecks-postgres-backup
    depends_on:
      database:
        condition: service_healthy
      app:
        condition: service_started
    env_file:
      - ./private/database-backup.env
    environment:
      - PGDATABASE=healthchecks
      - PGHOST=database
      - PGUSER=postgres
      - TZ=Europe/Bratislava # optional
    volumes:
      - ./data/database-backup:/backup:rw
      - ./log/database-backup:/log:rw
    healthcheck:
      test: '[ "$(cat /app/.internal/status 2>/dev/null)" = "1" ] || exit 1'
      start_period: 15s
      interval: 10s
      timeout: 1s
      retries: 0
    stop_grace_period: 5s

networks:
  healthchecks-network:
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: "10.1.0.0/19"
          ip_range: "10.1.11.0/24"
