x-definitions:
  common-env-variables: &common-env-variables
    HOMELAB_APP_TYPE: pihole
  common-service-options: &common-service-options
    environment:
      <<: *common-env-variables
    networks:
      internal-network: {}
    dns_opt:
      - single-request
    sysctls:
      net.ipv6.conf.all.disable_ipv6: 1

services:
  app:
    <<: *common-service-options
    container_name: ${DOCKER_COMPOSE_APP_NAME}-app
    build:
      context: ../../../../docker-images/
      dockerfile: ./external/pihole/Dockerfile
    environment:
      <<: *common-env-variables
      FTLCONF_RATE_LIMIT: "0/0" # Necessary because of https://www.reddit.com/r/pihole/comments/osm2fn/psa_if_you_are_having_random_dns_resolution
    volumes:
      - ./app-data/pihole-data:/etc/pihole:rw
      - ./app-data/pihole-dnsmasq.d:/etc/dnsmasq.d:rw
      - ./app-secrets/pihole-password.txt:/homelab/pihole-password.txt:ro
      - ../../../../docker-images/external/pihole/custom.list.txt:/etc/pihole/custom.list:ro
    # Hard-coded DNS is necessary because of bootstrapping problem
    # Basically PiHole needs functional DNS in order to start (eg. to update adlists before start - which it can't do until it itself started, when it's the only DNS server on network)
    dns:
      - 8.8.8.8
      - 1.1.1.1
    stop_grace_period: 30s

  app-setup:
    <<: *common-service-options
    container_name: ${DOCKER_COMPOSE_APP_NAME}-app-setup
    init: true
    build:
      context: ../../../../docker-images/
      dockerfile: ./custom/docker-setup/Dockerfile
    environment:
      <<: *common-env-variables
      HOMELAB_SETUP_TARGET_CONTAINER: ${DOCKER_COMPOSE_APP_NAME}-app
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  prometheus-exporter:
    <<: *common-service-options
    container_name: ${DOCKER_COMPOSE_APP_NAME}-prometheus-exporter
    init: true
    build:
      context: ../../../../docker-images/
      dockerfile: ./external/pihole-exporter/Dockerfile
    environment:
      <<: *common-env-variables
      PIHOLE_HOSTNAME: app
      PIHOLE_PORT: 80
    env_file:
      - ./app-secrets/prometheus-exporter.env

  certificate-manager:
    <<: *common-service-options
    container_name: ${DOCKER_COMPOSE_APP_NAME}-certificate-manager
    init: true
    build:
      context: ../../../../docker-images/
      dockerfile: ./custom/certificate-manager/Dockerfile
    env_file:
      - ./app-secrets/certificate-manager.env
    volumes:
      - ./app-data/certs:/homelab/certs:rw
      - ./app-logs/certificate-manager:/homelab/logs:rw

  http-proxy:
    <<: *common-service-options
    container_name: ${DOCKER_COMPOSE_APP_NAME}-http-proxy
    init: true
    build:
      context: ../../../../docker-images/
      dockerfile: ./custom/http-proxy/Dockerfile
    volumes:
      - ./app-data/certs:/homelab/certs:ro
      - ./app-secrets/http-user--prometheus.htpasswd:/homelab/http-user--prometheus.htpasswd:ro
      - ./app-secrets/http-user--proxy-status.htpasswd:/homelab/http-user--proxy-status.htpasswd:ro
      - ./app-logs/http-proxy:/homelab/logs:rw

networks:
  default: # Just disable default network
    driver: none
  internal-network:
    name: ${DOCKER_COMPOSE_APP_NAME}-internal-network
    internal: false # Allow external connectivity, because some containers need access to internet or other internal apps
