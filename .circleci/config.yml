version: 2.1

workflows:
  version: 2
  circleci:
    jobs:
      - azlint
      - local_build
      - docker_build
      - deployment

jobs:
  azlint:
    docker:
      - image: matejkosiarcik/azlint:0.6.12
    environment:
      # TODO: Remove override
      VALIDATE_NPM_INSTALL: "false"
      VALIDATE_NPM_INSTALL_LOCK: "false"
    steps:
      - checkout
      - run: |
          azlint
          # TODO: Reenable code below
          # if [ "$CIRCLE_BRANCH" = main ]; then
          #   azlint
          # else
          #   azlint --only-changed
          # fi

  local_build:
    docker:
      - image: debian:12.6
    steps:
      - checkout
      - run:
          name: Install system dependencies
          command: |
            apt-get update -qq
            DEBIAN_FRONTEND=noninteractive DEBCONF_TERSE=yes DEBCONF_NOWARNINGS=yes \
              apt-get install -q --yes --no-install-recommends \
              ca-certificates git make \
              nodejs npm \
              python3 python3-pip python3-venv
      - run:
          name: Install project dependencies
          command: make bootstrap
      - run:
          name: Build subprojects
          command: make build

  docker_build:
    docker:
      - image: docker:27.1.2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install system dependencies
          command: |
            apk update --no-cache
            apk add --no-cache make
      - run:
          name: Build docker
          command: |
            make docker-build

  deployment:
    docker:
      - image: docker:27.1.2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install system dependencies
          command: |
            apk update --no-cache
            apk add --no-cache apache2-utils bash git moreutils python3
      - run:
          name: Run deployment on Raspberry Pi 3B 1 [dry-run]
          command: |
            bash './machines/raspberry-pi-3b-1/deployment.sh' init-secrets
            # bash './machines/raspberry-pi-3b-1/deployment.sh' start --dry-run
      - run:
          name: Run deployment on Raspberry Pi 4B 1 [dry-run]
          command: |
            bash './machines/raspberry-pi-4b-1/deployment.sh' init-secrets
            # bash './machines/raspberry-pi-4b-1/deployment.sh' start --dry-run
      - run:
          name: Run deployment on Raspberry Pi Zero 2w 1 [dry-run]
          command: |
            bash './machines/raspberry-pi-4b-1/deployment.sh' init-secrets
            # bash './machines/raspberry-pi-zero-2w-2/deployment.sh' start --dry-run
      - run:
          name: Run deployment on Raspberry Pi Zero 2w 1 [dry-run]
          command: |
            bash './machines/raspberry-pi-4b-1/deployment.sh' init-secrets
            # bash './machines/raspberry-pi-zero-2w-2/deployment.sh' start --dry-run
      - run:
          name: Run deployment on Odroid H3 1 [dry-run]
          command: |
            bash './machines/raspberry-pi-4b-1/deployment.sh' init-secrets
            # bash './machines/odroid-h3-1/deployment.sh' start --dry-run
