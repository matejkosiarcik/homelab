version: 2.1

workflows:
  version: 2
  circleci:
    jobs:
      - azlint
      - local_build
      - docker_build
      - deployment[dry]

jobs:
  azlint:
    docker:
      - image: matejkosiarcik/azlint:0.6.11
    steps:
      - checkout
      - run: |
          azlint
          # TODO: Reenable code below
          # if [ "$CIRCLE_BRANCH" = main ]; then
          #   azlint
          # else
          #   azlint --only-changed
          # fi

  local_build:
    docker:
      - image: debian:12.5
    steps:
      - checkout
      - run:
          name: Install system dependencies
          command: |
            apt-get update -qq
            DEBIAN_FRONTEND=noninteractive DEBCONF_TERSE=yes DEBCONF_NOWARNINGS=yes \
              apt-get install -q --yes --no-install-recommends \
              ca-certificates make \
              nodejs npm \
              python3 python3-pip python3-venv
      - run:
          name: Install project dependencies
          command: make bootstrap
      - run:
          name: Build subprojects
          command: make build

  docker_build:
    docker:
      - image: docker:26.0.2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build pi-hole backuper container
          working_directory: ./machines/raspberrypi-3b/pi-hole/backuper
          command: docker build .
      - run:
          name: Build healthchecks backuper container
          working_directory: ./machines/odroid-h3/healthchecks/backuper
          command: docker build .
      - run:
          name: Build unifi-network-application backuper container
          working_directory: ./machines/odroid-h3/unifi-network-application/backuper
          command: docker build .
      - run:
          name: Build omada-controller backuper container
          working_directory: ./machines/odroid-h3/omada-controller/backuper
          command: docker build .
      - run:
          name: Build uptime-kuma backuper container
          working_directory: ./machines/odroid-h3/uptime-kuma/backuper
          command: docker build .

  deployment[dry]:
    docker:
      - image: docker:26.0.2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install system dependencies
          command: |
            apk update --no-cache
            apk add --no-cache bash git
      - run:
          name: Run deployment on Raspberry Pi 3B [dry-run]
          command: |
            mkdir -p "$PWD/.deployment/raspberrypi-3b/pi-hole/private"
            touch "$PWD/.deployment/raspberrypi-3b/pi-hole/private/app-backup.env"
            DEST_DIR="$PWD/.deployment/raspberrypi-3b" \
              bash './machines/raspberrypi-3b/install.sh' -n
      - run:
          name: Run deployment on Odroid H3 [dry-run]
          command: |
            mkdir -p "$PWD/.deployment/odroid-h3/healthchecks/private" \
              "$PWD/.deployment/odroid-h3/omada-controller/private" \
              "$PWD/.deployment/odroid-h3/unifi-network-application/private" \
              "$PWD/.deployment/odroid-h3/uptime-kuma/private"
            touch "$PWD/.deployment/odroid-h3/healthchecks/private/app.env" \
              "$PWD/.deployment/odroid-h3/healthchecks/private/database-backup.env" \
              "$PWD/.deployment/odroid-h3/omada-controller/private/database-backup.env" \
              "$PWD/.deployment/odroid-h3/unifi-network-application/private/app-backup.env" \
              "$PWD/.deployment/odroid-h3/uptime-kuma/private/app-backup.env"
            DEST_DIR="$PWD/.deployment/odroid-h3" \
              bash './machines/odroid-h3/install.sh' -n
