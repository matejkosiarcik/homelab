version: 2.1

workflows:
  version: 2
  circleci:
    jobs:
      - local_build
      - docker_build
      - dryrun_deployment:
          matrix:
            parameters:
              server:
                - macbook-pro-2012
                - odroid-h3
                - odroid-h4-ultra
                - raspberry-pi-3b
                - raspberry-pi-4b-2g
                - raspberry-pi-4b-4g
                # - raspberry-pi-zero-2w-1
                # - raspberry-pi-zero-2w-2

jobs:
  local_build:
    docker:
      - image: debian:12.11
    steps:
      - checkout
      - run:
          name: Install system dependencies
          command: |
            apt-get update -qq
            DEBIAN_FRONTEND=noninteractive DEBCONF_TERSE=yes DEBCONF_NOWARNINGS=yes \
              apt-get install -q --yes --no-install-recommends \
              ca-certificates git make \
              nodejs npm \
              python3 python3-pip python3-venv
      - run:
          environment:
            PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          name: Install project dependencies
          command: make bootstrap
      - run:
          name: Build subprojects
          command: make build

  docker_build:
    docker:
      - image: docker:28.3.1
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install system dependencies
          command: |
            apk update --no-cache
            apk add --no-cache make
      - run:
          name: Build docker
          command: |
            make docker-build

  dryrun_deployment:
    parameters:
      server:
        type: string
    docker:
      - image: docker:28.3.1
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install system dependencies
          command: |
            set -euf
            apk update --no-cache
            apk add --no-cache apache2-utils bash git moreutils nodejs npm python3
            npm install -g @go-task/cli
      - run:
          name: Prepare secrets on << parameters.server >>
          environment:
            PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          command: |
            set -euf
            cd './servers/<< parameters.server >>'
            task secrets -- --dev --offline
      # - run:
      #     name: Build apps on << parameters.server >>
      #     command: |
      #       set -euf
      #       cd './servers/<< parameters.server >>'
      #       task build -- --dev
      - run:
          name: Run dry-run deployment on << parameters.server >>
          command: |
            set -euf
            cd './servers/<< parameters.server >>'
            task start -- --dev --dry-run
